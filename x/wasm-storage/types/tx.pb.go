// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: sedachain/wasm_storage/v1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	github_com_CosmWasm_wasmd_x_wasm_types "github.com/CosmWasm/wasmd/x/wasm/types"
	_ "github.com/cosmos/cosmos-proto"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// The request message for the StoreDataRequestWasm method.
type MsgStoreDataRequestWasm struct {
	Sender   string   `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Wasm     []byte   `protobuf:"bytes,2,opt,name=wasm,proto3" json:"wasm,omitempty"`
	WasmType WasmType `protobuf:"varint,3,opt,name=wasm_type,json=wasmType,proto3,enum=sedachain.wasm_storage.v1.WasmType" json:"wasm_type,omitempty"`
}

func (m *MsgStoreDataRequestWasm) Reset()         { *m = MsgStoreDataRequestWasm{} }
func (m *MsgStoreDataRequestWasm) String() string { return proto.CompactTextString(m) }
func (*MsgStoreDataRequestWasm) ProtoMessage()    {}
func (*MsgStoreDataRequestWasm) Descriptor() ([]byte, []int) {
	return fileDescriptor_10a76e8135c0d000, []int{0}
}
func (m *MsgStoreDataRequestWasm) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStoreDataRequestWasm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStoreDataRequestWasm.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStoreDataRequestWasm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStoreDataRequestWasm.Merge(m, src)
}
func (m *MsgStoreDataRequestWasm) XXX_Size() int {
	return m.Size()
}
func (m *MsgStoreDataRequestWasm) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStoreDataRequestWasm.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStoreDataRequestWasm proto.InternalMessageInfo

func (m *MsgStoreDataRequestWasm) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgStoreDataRequestWasm) GetWasm() []byte {
	if m != nil {
		return m.Wasm
	}
	return nil
}

func (m *MsgStoreDataRequestWasm) GetWasmType() WasmType {
	if m != nil {
		return m.WasmType
	}
	return WasmTypeNil
}

// The response message for the StoreDataRequestWasm method.
type MsgStoreDataRequestWasmResponse struct {
	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (m *MsgStoreDataRequestWasmResponse) Reset()         { *m = MsgStoreDataRequestWasmResponse{} }
func (m *MsgStoreDataRequestWasmResponse) String() string { return proto.CompactTextString(m) }
func (*MsgStoreDataRequestWasmResponse) ProtoMessage()    {}
func (*MsgStoreDataRequestWasmResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_10a76e8135c0d000, []int{1}
}
func (m *MsgStoreDataRequestWasmResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStoreDataRequestWasmResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStoreDataRequestWasmResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStoreDataRequestWasmResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStoreDataRequestWasmResponse.Merge(m, src)
}
func (m *MsgStoreDataRequestWasmResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgStoreDataRequestWasmResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStoreDataRequestWasmResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStoreDataRequestWasmResponse proto.InternalMessageInfo

func (m *MsgStoreDataRequestWasmResponse) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

// The request message for the StoreOverlayWasm method.
type MsgStoreOverlayWasm struct {
	Sender   string   `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Wasm     []byte   `protobuf:"bytes,2,opt,name=wasm,proto3" json:"wasm,omitempty"`
	WasmType WasmType `protobuf:"varint,3,opt,name=wasm_type,json=wasmType,proto3,enum=sedachain.wasm_storage.v1.WasmType" json:"wasm_type,omitempty"`
}

func (m *MsgStoreOverlayWasm) Reset()         { *m = MsgStoreOverlayWasm{} }
func (m *MsgStoreOverlayWasm) String() string { return proto.CompactTextString(m) }
func (*MsgStoreOverlayWasm) ProtoMessage()    {}
func (*MsgStoreOverlayWasm) Descriptor() ([]byte, []int) {
	return fileDescriptor_10a76e8135c0d000, []int{2}
}
func (m *MsgStoreOverlayWasm) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStoreOverlayWasm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStoreOverlayWasm.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStoreOverlayWasm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStoreOverlayWasm.Merge(m, src)
}
func (m *MsgStoreOverlayWasm) XXX_Size() int {
	return m.Size()
}
func (m *MsgStoreOverlayWasm) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStoreOverlayWasm.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStoreOverlayWasm proto.InternalMessageInfo

func (m *MsgStoreOverlayWasm) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgStoreOverlayWasm) GetWasm() []byte {
	if m != nil {
		return m.Wasm
	}
	return nil
}

func (m *MsgStoreOverlayWasm) GetWasmType() WasmType {
	if m != nil {
		return m.WasmType
	}
	return WasmTypeNil
}

// The response message for the StoreOverlayWasm method.
type MsgStoreOverlayWasmResponse struct {
	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (m *MsgStoreOverlayWasmResponse) Reset()         { *m = MsgStoreOverlayWasmResponse{} }
func (m *MsgStoreOverlayWasmResponse) String() string { return proto.CompactTextString(m) }
func (*MsgStoreOverlayWasmResponse) ProtoMessage()    {}
func (*MsgStoreOverlayWasmResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_10a76e8135c0d000, []int{3}
}
func (m *MsgStoreOverlayWasmResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgStoreOverlayWasmResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgStoreOverlayWasmResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgStoreOverlayWasmResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgStoreOverlayWasmResponse.Merge(m, src)
}
func (m *MsgStoreOverlayWasmResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgStoreOverlayWasmResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgStoreOverlayWasmResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgStoreOverlayWasmResponse proto.InternalMessageInfo

func (m *MsgStoreOverlayWasmResponse) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

// The request message for the InstantiateAndRegisterProxyContract method.
type MsgInstantiateAndRegisterProxyContract struct {
	Sender string                                                    `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Admin  string                                                    `protobuf:"bytes,2,opt,name=admin,proto3" json:"admin,omitempty"`
	CodeID uint64                                                    `protobuf:"varint,3,opt,name=code_id,json=codeId,proto3" json:"code_id,omitempty"`
	Label  string                                                    `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	Msg    github_com_CosmWasm_wasmd_x_wasm_types.RawContractMessage `protobuf:"bytes,5,opt,name=msg,proto3,casttype=github.com/CosmWasm/wasmd/x/wasm/types.RawContractMessage" json:"msg,omitempty"`
	Funds  github_com_cosmos_cosmos_sdk_types.Coins                  `protobuf:"bytes,6,rep,name=funds,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"funds"`
	Salt   []byte                                                    `protobuf:"bytes,7,opt,name=salt,proto3" json:"salt,omitempty"`
	FixMsg bool                                                      `protobuf:"varint,8,opt,name=fix_msg,json=fixMsg,proto3" json:"fix_msg,omitempty"`
}

func (m *MsgInstantiateAndRegisterProxyContract) Reset() {
	*m = MsgInstantiateAndRegisterProxyContract{}
}
func (m *MsgInstantiateAndRegisterProxyContract) String() string { return proto.CompactTextString(m) }
func (*MsgInstantiateAndRegisterProxyContract) ProtoMessage()    {}
func (*MsgInstantiateAndRegisterProxyContract) Descriptor() ([]byte, []int) {
	return fileDescriptor_10a76e8135c0d000, []int{4}
}
func (m *MsgInstantiateAndRegisterProxyContract) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInstantiateAndRegisterProxyContract) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInstantiateAndRegisterProxyContract.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInstantiateAndRegisterProxyContract) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInstantiateAndRegisterProxyContract.Merge(m, src)
}
func (m *MsgInstantiateAndRegisterProxyContract) XXX_Size() int {
	return m.Size()
}
func (m *MsgInstantiateAndRegisterProxyContract) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInstantiateAndRegisterProxyContract.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInstantiateAndRegisterProxyContract proto.InternalMessageInfo

func (m *MsgInstantiateAndRegisterProxyContract) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgInstantiateAndRegisterProxyContract) GetAdmin() string {
	if m != nil {
		return m.Admin
	}
	return ""
}

func (m *MsgInstantiateAndRegisterProxyContract) GetCodeID() uint64 {
	if m != nil {
		return m.CodeID
	}
	return 0
}

func (m *MsgInstantiateAndRegisterProxyContract) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *MsgInstantiateAndRegisterProxyContract) GetMsg() github_com_CosmWasm_wasmd_x_wasm_types.RawContractMessage {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *MsgInstantiateAndRegisterProxyContract) GetFunds() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.Funds
	}
	return nil
}

func (m *MsgInstantiateAndRegisterProxyContract) GetSalt() []byte {
	if m != nil {
		return m.Salt
	}
	return nil
}

func (m *MsgInstantiateAndRegisterProxyContract) GetFixMsg() bool {
	if m != nil {
		return m.FixMsg
	}
	return false
}

// The response message for the InstantiateAndRegisterProxyContract method.
type MsgInstantiateAndRegisterProxyContractResponse struct {
	ContractAddress string `protobuf:"bytes,1,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
}

func (m *MsgInstantiateAndRegisterProxyContractResponse) Reset() {
	*m = MsgInstantiateAndRegisterProxyContractResponse{}
}
func (m *MsgInstantiateAndRegisterProxyContractResponse) String() string {
	return proto.CompactTextString(m)
}
func (*MsgInstantiateAndRegisterProxyContractResponse) ProtoMessage() {}
func (*MsgInstantiateAndRegisterProxyContractResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_10a76e8135c0d000, []int{5}
}
func (m *MsgInstantiateAndRegisterProxyContractResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInstantiateAndRegisterProxyContractResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInstantiateAndRegisterProxyContractResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInstantiateAndRegisterProxyContractResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInstantiateAndRegisterProxyContractResponse.Merge(m, src)
}
func (m *MsgInstantiateAndRegisterProxyContractResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgInstantiateAndRegisterProxyContractResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInstantiateAndRegisterProxyContractResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInstantiateAndRegisterProxyContractResponse proto.InternalMessageInfo

func (m *MsgInstantiateAndRegisterProxyContractResponse) GetContractAddress() string {
	if m != nil {
		return m.ContractAddress
	}
	return ""
}

// The request message for the UpdateParams method.
type MsgUpdateParams struct {
	// authority is the address that controls the module (defaults to x/gov unless
	// overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	Params    Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

func (m *MsgUpdateParams) Reset()         { *m = MsgUpdateParams{} }
func (m *MsgUpdateParams) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParams) ProtoMessage()    {}
func (*MsgUpdateParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_10a76e8135c0d000, []int{6}
}
func (m *MsgUpdateParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParams.Merge(m, src)
}
func (m *MsgUpdateParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParams proto.InternalMessageInfo

func (m *MsgUpdateParams) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUpdateParams) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

// no data needs to be returned
type MsgUpdateParamsResponse struct {
}

func (m *MsgUpdateParamsResponse) Reset()         { *m = MsgUpdateParamsResponse{} }
func (m *MsgUpdateParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParamsResponse) ProtoMessage()    {}
func (*MsgUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_10a76e8135c0d000, []int{7}
}
func (m *MsgUpdateParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParamsResponse.Merge(m, src)
}
func (m *MsgUpdateParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParamsResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgStoreDataRequestWasm)(nil), "sedachain.wasm_storage.v1.MsgStoreDataRequestWasm")
	proto.RegisterType((*MsgStoreDataRequestWasmResponse)(nil), "sedachain.wasm_storage.v1.MsgStoreDataRequestWasmResponse")
	proto.RegisterType((*MsgStoreOverlayWasm)(nil), "sedachain.wasm_storage.v1.MsgStoreOverlayWasm")
	proto.RegisterType((*MsgStoreOverlayWasmResponse)(nil), "sedachain.wasm_storage.v1.MsgStoreOverlayWasmResponse")
	proto.RegisterType((*MsgInstantiateAndRegisterProxyContract)(nil), "sedachain.wasm_storage.v1.MsgInstantiateAndRegisterProxyContract")
	proto.RegisterType((*MsgInstantiateAndRegisterProxyContractResponse)(nil), "sedachain.wasm_storage.v1.MsgInstantiateAndRegisterProxyContractResponse")
	proto.RegisterType((*MsgUpdateParams)(nil), "sedachain.wasm_storage.v1.MsgUpdateParams")
	proto.RegisterType((*MsgUpdateParamsResponse)(nil), "sedachain.wasm_storage.v1.MsgUpdateParamsResponse")
}

func init() {
	proto.RegisterFile("sedachain/wasm_storage/v1/tx.proto", fileDescriptor_10a76e8135c0d000)
}

var fileDescriptor_10a76e8135c0d000 = []byte{
	// 783 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x55, 0x4f, 0x4f, 0xdb, 0x48,
	0x14, 0x8f, 0x37, 0x7f, 0x80, 0x01, 0x01, 0xf2, 0x46, 0xc2, 0xc9, 0x4a, 0x49, 0x36, 0x48, 0xab,
	0x08, 0x6d, 0x6c, 0x92, 0xd5, 0xb2, 0x5a, 0xa4, 0xd5, 0x96, 0x84, 0x4b, 0x0e, 0x11, 0xd4, 0xb4,
	0xaa, 0xd4, 0x4b, 0x34, 0xb1, 0x07, 0xc7, 0x6a, 0xec, 0x49, 0xfd, 0x26, 0x90, 0xf4, 0xd8, 0x43,
	0xcf, 0x3d, 0xf7, 0x23, 0x70, 0xa8, 0x90, 0xe8, 0x87, 0xe0, 0x88, 0x7a, 0xea, 0x89, 0x56, 0xe1,
	0xd0, 0xef, 0xd0, 0x53, 0x35, 0xe3, 0x49, 0x08, 0x2a, 0x09, 0xa1, 0xbd, 0xf4, 0xe4, 0xe7, 0x99,
	0xdf, 0xfb, 0xfd, 0xde, 0x9f, 0x79, 0x33, 0x28, 0x0f, 0xc4, 0xc6, 0x56, 0x0b, 0xbb, 0xbe, 0x71,
	0x8c, 0xc1, 0x6b, 0x00, 0xa3, 0x01, 0x76, 0x88, 0x71, 0x54, 0x32, 0x58, 0x4f, 0xef, 0x04, 0x94,
	0x51, 0x35, 0x35, 0xc2, 0xe8, 0xe3, 0x18, 0xfd, 0xa8, 0x94, 0xce, 0x58, 0x14, 0x3c, 0x0a, 0x46,
	0x13, 0x03, 0xf7, 0x69, 0x12, 0x86, 0x4b, 0x86, 0x45, 0x5d, 0x3f, 0x74, 0x4d, 0xaf, 0xc9, 0x7d,
	0x0f, 0x1c, 0x4e, 0xe9, 0x81, 0x23, 0x37, 0x92, 0x0e, 0x75, 0xa8, 0x30, 0x0d, 0x6e, 0xc9, 0xd5,
	0x54, 0x08, 0x6f, 0x84, 0x1b, 0xe1, 0x8f, 0xdc, 0xfa, 0x73, 0x72, 0xa0, 0x37, 0x82, 0x12, 0xe8,
	0xfc, 0x5b, 0x05, 0xad, 0xd5, 0xc1, 0x39, 0x60, 0x34, 0x20, 0xbb, 0x98, 0x61, 0x93, 0x3c, 0xef,
	0x12, 0x60, 0x4f, 0x30, 0x78, 0xea, 0x26, 0x4a, 0x00, 0xf1, 0x6d, 0x12, 0x68, 0x4a, 0x4e, 0x29,
	0x2c, 0x54, 0xb4, 0xf7, 0xef, 0x8a, 0x49, 0xa9, 0xb5, 0x63, 0xdb, 0x01, 0x01, 0x38, 0x60, 0x81,
	0xeb, 0x3b, 0xa6, 0xc4, 0xa9, 0x2a, 0x8a, 0x71, 0x0d, 0xed, 0x97, 0x9c, 0x52, 0x58, 0x32, 0x85,
	0xad, 0x3e, 0x40, 0x0b, 0x42, 0x97, 0xf5, 0x3b, 0x44, 0x8b, 0xe6, 0x94, 0xc2, 0x72, 0x79, 0x5d,
	0x9f, 0x58, 0x28, 0x9d, 0x2b, 0x3f, 0xea, 0x77, 0x88, 0x39, 0x7f, 0x2c, 0xad, 0xed, 0xc5, 0x97,
	0x9f, 0x4f, 0x37, 0xa4, 0x44, 0xfe, 0x6f, 0x94, 0x9d, 0x10, 0xaf, 0x49, 0xa0, 0x43, 0x7d, 0x20,
	0x3c, 0x8a, 0x16, 0x86, 0x56, 0x18, 0xb5, 0x29, 0xec, 0xfc, 0x89, 0x82, 0x7e, 0x1d, 0xfa, 0xed,
	0x1d, 0x91, 0xa0, 0x8d, 0xfb, 0x3f, 0x6f, 0x8e, 0x25, 0xf4, 0xdb, 0x2d, 0xb1, 0x4e, 0xcd, 0xef,
	0x2c, 0x8a, 0xfe, 0xa8, 0x83, 0x53, 0xf3, 0x81, 0x61, 0x9f, 0xb9, 0x98, 0x91, 0x1d, 0xdf, 0x36,
	0x89, 0xe3, 0x02, 0x23, 0xc1, 0x7e, 0x40, 0x7b, 0xfd, 0x2a, 0xf5, 0x59, 0x80, 0x2d, 0xf6, 0x1d,
	0x29, 0xeb, 0x28, 0x8e, 0x6d, 0xcf, 0xf5, 0x45, 0xce, 0xd3, 0x1c, 0x42, 0x98, 0xba, 0x8e, 0xe6,
	0x2c, 0x6a, 0x93, 0x86, 0x6b, 0x8b, 0x62, 0xc4, 0x2a, 0x68, 0x70, 0x99, 0x4d, 0x54, 0xa9, 0x4d,
	0x6a, 0xbb, 0x66, 0x82, 0x6f, 0xd5, 0x6c, 0x35, 0x89, 0xe2, 0x6d, 0xdc, 0x24, 0x6d, 0x2d, 0x26,
	0xd2, 0x08, 0x7f, 0xd4, 0x3d, 0x14, 0xf5, 0xc0, 0xd1, 0xe2, 0xbc, 0xb8, 0x95, 0xff, 0xbe, 0x5c,
	0x66, 0xff, 0x75, 0x5c, 0xd6, 0xea, 0x36, 0x75, 0x8b, 0x7a, 0x46, 0x95, 0x82, 0xc7, 0x2b, 0x21,
	0x0e, 0xb2, 0x6d, 0xf4, 0xc4, 0xd7, 0xe0, 0x45, 0x07, 0xdd, 0xc4, 0xc7, 0xc3, 0x0c, 0xeb, 0x04,
	0x00, 0x3b, 0xc4, 0xe4, 0x4c, 0x2a, 0x46, 0xf1, 0xc3, 0xae, 0x6f, 0x83, 0x96, 0xc8, 0x45, 0x0b,
	0x8b, 0xe5, 0x94, 0x2e, 0x03, 0xe7, 0x83, 0xa8, 0xcb, 0x41, 0xd4, 0xab, 0xd4, 0xf5, 0x2b, 0x9b,
	0xe7, 0x97, 0xd9, 0xc8, 0xc9, 0xc7, 0x6c, 0x61, 0x4c, 0x51, 0x4e, 0x65, 0xf8, 0x29, 0x82, 0xfd,
	0x4c, 0xaa, 0x71, 0x07, 0x30, 0x43, 0x66, 0xde, 0x0f, 0xc0, 0x6d, 0xa6, 0xcd, 0x85, 0x27, 0x82,
	0xdb, 0xea, 0x1a, 0x9a, 0x3b, 0x74, 0x7b, 0x0d, 0x9e, 0xcb, 0x7c, 0x4e, 0x29, 0xcc, 0x9b, 0x89,
	0x43, 0xb7, 0x57, 0x07, 0xe7, 0x66, 0xa3, 0xbb, 0x48, 0x9f, 0xad, 0x69, 0xa3, 0xde, 0x57, 0xd1,
	0xaa, 0x25, 0xd7, 0x1a, 0x38, 0xac, 0xfd, 0x9d, 0x6d, 0x5c, 0x19, 0x7a, 0xc8, 0xe5, 0xfc, 0x1b,
	0x05, 0xad, 0xd4, 0xc1, 0x79, 0xdc, 0xb1, 0x31, 0x23, 0xfb, 0x38, 0xc0, 0x1e, 0xa8, 0x5b, 0x68,
	0x01, 0x77, 0x59, 0x8b, 0x06, 0x2e, 0xeb, 0xdf, 0xc9, 0x78, 0x0d, 0x55, 0xff, 0x47, 0x89, 0x8e,
	0x60, 0x10, 0x87, 0x63, 0xb1, 0xfc, 0xfb, 0x94, 0x73, 0x1f, 0x4a, 0x55, 0x62, 0xbc, 0xd0, 0xa6,
	0x74, 0xdb, 0x5e, 0xe6, 0x05, 0xb9, 0x26, 0xcc, 0xa7, 0xc4, 0x85, 0x34, 0x1e, 0xdb, 0x30, 0xf9,
	0xf2, 0x69, 0x0c, 0x45, 0xeb, 0xe0, 0xa8, 0xaf, 0x14, 0x94, 0xbc, 0xf5, 0xc6, 0x2a, 0x4f, 0x11,
	0x9f, 0x70, 0x6b, 0xa4, 0xb7, 0xef, 0xef, 0x33, 0xea, 0xc6, 0x0b, 0xb4, 0xfa, 0xcd, 0x8d, 0xa2,
	0xcf, 0xc0, 0x37, 0x86, 0x4f, 0x6f, 0xdd, 0x0f, 0x3f, 0xd2, 0x3e, 0x53, 0xd0, 0xfa, 0x2c, 0xe3,
	0xbe, 0x33, 0x9d, 0x7f, 0x06, 0x8a, 0x74, 0xed, 0x87, 0x29, 0x46, 0x51, 0xfb, 0x68, 0xe9, 0xc6,
	0xb1, 0xdb, 0x98, 0x4e, 0x3d, 0x8e, 0x4d, 0x97, 0x67, 0xc7, 0x0e, 0xf5, 0x2a, 0x0f, 0xcf, 0x07,
	0x19, 0xe5, 0x62, 0x90, 0x51, 0x3e, 0x0d, 0x32, 0xca, 0xeb, 0xab, 0x4c, 0xe4, 0xe2, 0x2a, 0x13,
	0xf9, 0x70, 0x95, 0x89, 0x3c, 0xfd, 0x67, 0x6c, 0xcc, 0x39, 0xaf, 0x78, 0x0f, 0x2d, 0xda, 0x16,
	0x3f, 0xc5, 0xf0, 0x01, 0x0d, 0x6f, 0x98, 0xe2, 0xf0, 0x09, 0x15, 0xb3, 0xdf, 0x4c, 0x08, 0xe4,
	0x5f, 0x5f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x61, 0x15, 0x08, 0x55, 0x12, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// The StoreDataRequestWasm method stores a dr wasm in the wasm-storage
	// module.
	StoreDataRequestWasm(ctx context.Context, in *MsgStoreDataRequestWasm, opts ...grpc.CallOption) (*MsgStoreDataRequestWasmResponse, error)
	// The StoreOverlayWasm method stores an overlay wasm in the wasm-storage
	// module.
	StoreOverlayWasm(ctx context.Context, in *MsgStoreOverlayWasm, opts ...grpc.CallOption) (*MsgStoreOverlayWasmResponse, error)
	// The InstantiateAndRegisterProxyContract method instantiates the proxy
	// contract and registers it's address.
	InstantiateAndRegisterProxyContract(ctx context.Context, in *MsgInstantiateAndRegisterProxyContract, opts ...grpc.CallOption) (*MsgInstantiateAndRegisterProxyContractResponse, error)
	// The UpdateParams method updates the module's parameters.
	UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) StoreDataRequestWasm(ctx context.Context, in *MsgStoreDataRequestWasm, opts ...grpc.CallOption) (*MsgStoreDataRequestWasmResponse, error) {
	out := new(MsgStoreDataRequestWasmResponse)
	err := c.cc.Invoke(ctx, "/sedachain.wasm_storage.v1.Msg/StoreDataRequestWasm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) StoreOverlayWasm(ctx context.Context, in *MsgStoreOverlayWasm, opts ...grpc.CallOption) (*MsgStoreOverlayWasmResponse, error) {
	out := new(MsgStoreOverlayWasmResponse)
	err := c.cc.Invoke(ctx, "/sedachain.wasm_storage.v1.Msg/StoreOverlayWasm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) InstantiateAndRegisterProxyContract(ctx context.Context, in *MsgInstantiateAndRegisterProxyContract, opts ...grpc.CallOption) (*MsgInstantiateAndRegisterProxyContractResponse, error) {
	out := new(MsgInstantiateAndRegisterProxyContractResponse)
	err := c.cc.Invoke(ctx, "/sedachain.wasm_storage.v1.Msg/InstantiateAndRegisterProxyContract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error) {
	out := new(MsgUpdateParamsResponse)
	err := c.cc.Invoke(ctx, "/sedachain.wasm_storage.v1.Msg/UpdateParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// The StoreDataRequestWasm method stores a dr wasm in the wasm-storage
	// module.
	StoreDataRequestWasm(context.Context, *MsgStoreDataRequestWasm) (*MsgStoreDataRequestWasmResponse, error)
	// The StoreOverlayWasm method stores an overlay wasm in the wasm-storage
	// module.
	StoreOverlayWasm(context.Context, *MsgStoreOverlayWasm) (*MsgStoreOverlayWasmResponse, error)
	// The InstantiateAndRegisterProxyContract method instantiates the proxy
	// contract and registers it's address.
	InstantiateAndRegisterProxyContract(context.Context, *MsgInstantiateAndRegisterProxyContract) (*MsgInstantiateAndRegisterProxyContractResponse, error)
	// The UpdateParams method updates the module's parameters.
	UpdateParams(context.Context, *MsgUpdateParams) (*MsgUpdateParamsResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) StoreDataRequestWasm(ctx context.Context, req *MsgStoreDataRequestWasm) (*MsgStoreDataRequestWasmResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StoreDataRequestWasm not implemented")
}
func (*UnimplementedMsgServer) StoreOverlayWasm(ctx context.Context, req *MsgStoreOverlayWasm) (*MsgStoreOverlayWasmResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StoreOverlayWasm not implemented")
}
func (*UnimplementedMsgServer) InstantiateAndRegisterProxyContract(ctx context.Context, req *MsgInstantiateAndRegisterProxyContract) (*MsgInstantiateAndRegisterProxyContractResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InstantiateAndRegisterProxyContract not implemented")
}
func (*UnimplementedMsgServer) UpdateParams(ctx context.Context, req *MsgUpdateParams) (*MsgUpdateParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateParams not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_StoreDataRequestWasm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgStoreDataRequestWasm)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).StoreDataRequestWasm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sedachain.wasm_storage.v1.Msg/StoreDataRequestWasm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).StoreDataRequestWasm(ctx, req.(*MsgStoreDataRequestWasm))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_StoreOverlayWasm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgStoreOverlayWasm)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).StoreOverlayWasm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sedachain.wasm_storage.v1.Msg/StoreOverlayWasm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).StoreOverlayWasm(ctx, req.(*MsgStoreOverlayWasm))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_InstantiateAndRegisterProxyContract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgInstantiateAndRegisterProxyContract)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).InstantiateAndRegisterProxyContract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sedachain.wasm_storage.v1.Msg/InstantiateAndRegisterProxyContract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).InstantiateAndRegisterProxyContract(ctx, req.(*MsgInstantiateAndRegisterProxyContract))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sedachain.wasm_storage.v1.Msg/UpdateParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateParams(ctx, req.(*MsgUpdateParams))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sedachain.wasm_storage.v1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StoreDataRequestWasm",
			Handler:    _Msg_StoreDataRequestWasm_Handler,
		},
		{
			MethodName: "StoreOverlayWasm",
			Handler:    _Msg_StoreOverlayWasm_Handler,
		},
		{
			MethodName: "InstantiateAndRegisterProxyContract",
			Handler:    _Msg_InstantiateAndRegisterProxyContract_Handler,
		},
		{
			MethodName: "UpdateParams",
			Handler:    _Msg_UpdateParams_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sedachain/wasm_storage/v1/tx.proto",
}

func (m *MsgStoreDataRequestWasm) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStoreDataRequestWasm) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStoreDataRequestWasm) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.WasmType != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.WasmType))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Wasm) > 0 {
		i -= len(m.Wasm)
		copy(dAtA[i:], m.Wasm)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Wasm)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgStoreDataRequestWasmResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStoreDataRequestWasmResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStoreDataRequestWasmResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Hash) > 0 {
		i -= len(m.Hash)
		copy(dAtA[i:], m.Hash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Hash)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgStoreOverlayWasm) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStoreOverlayWasm) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStoreOverlayWasm) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.WasmType != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.WasmType))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Wasm) > 0 {
		i -= len(m.Wasm)
		copy(dAtA[i:], m.Wasm)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Wasm)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgStoreOverlayWasmResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgStoreOverlayWasmResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgStoreOverlayWasmResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Hash) > 0 {
		i -= len(m.Hash)
		copy(dAtA[i:], m.Hash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Hash)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgInstantiateAndRegisterProxyContract) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInstantiateAndRegisterProxyContract) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInstantiateAndRegisterProxyContract) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.FixMsg {
		i--
		if m.FixMsg {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if len(m.Salt) > 0 {
		i -= len(m.Salt)
		copy(dAtA[i:], m.Salt)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Salt)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Funds) > 0 {
		for iNdEx := len(m.Funds) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Funds[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.Msg) > 0 {
		i -= len(m.Msg)
		copy(dAtA[i:], m.Msg)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Msg)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Label) > 0 {
		i -= len(m.Label)
		copy(dAtA[i:], m.Label)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Label)))
		i--
		dAtA[i] = 0x22
	}
	if m.CodeID != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CodeID))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Admin) > 0 {
		i -= len(m.Admin)
		copy(dAtA[i:], m.Admin)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Admin)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgInstantiateAndRegisterProxyContractResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInstantiateAndRegisterProxyContractResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInstantiateAndRegisterProxyContractResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ContractAddress) > 0 {
		i -= len(m.ContractAddress)
		copy(dAtA[i:], m.ContractAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ContractAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgStoreDataRequestWasm) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Wasm)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.WasmType != 0 {
		n += 1 + sovTx(uint64(m.WasmType))
	}
	return n
}

func (m *MsgStoreDataRequestWasmResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Hash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgStoreOverlayWasm) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Wasm)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.WasmType != 0 {
		n += 1 + sovTx(uint64(m.WasmType))
	}
	return n
}

func (m *MsgStoreOverlayWasmResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Hash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgInstantiateAndRegisterProxyContract) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Admin)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.CodeID != 0 {
		n += 1 + sovTx(uint64(m.CodeID))
	}
	l = len(m.Label)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Msg)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Funds) > 0 {
		for _, e := range m.Funds {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	l = len(m.Salt)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.FixMsg {
		n += 2
	}
	return n
}

func (m *MsgInstantiateAndRegisterProxyContractResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ContractAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Params.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgStoreDataRequestWasm) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStoreDataRequestWasm: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStoreDataRequestWasm: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Wasm", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Wasm = append(m.Wasm[:0], dAtA[iNdEx:postIndex]...)
			if m.Wasm == nil {
				m.Wasm = []byte{}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WasmType", wireType)
			}
			m.WasmType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WasmType |= WasmType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStoreDataRequestWasmResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStoreDataRequestWasmResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStoreDataRequestWasmResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStoreOverlayWasm) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStoreOverlayWasm: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStoreOverlayWasm: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Wasm", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Wasm = append(m.Wasm[:0], dAtA[iNdEx:postIndex]...)
			if m.Wasm == nil {
				m.Wasm = []byte{}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field WasmType", wireType)
			}
			m.WasmType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.WasmType |= WasmType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgStoreOverlayWasmResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgStoreOverlayWasmResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgStoreOverlayWasmResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hash = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgInstantiateAndRegisterProxyContract) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInstantiateAndRegisterProxyContract: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInstantiateAndRegisterProxyContract: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Admin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Admin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CodeID", wireType)
			}
			m.CodeID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CodeID |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Label", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Label = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = append(m.Msg[:0], dAtA[iNdEx:postIndex]...)
			if m.Msg == nil {
				m.Msg = []byte{}
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Funds", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Funds = append(m.Funds, types.Coin{})
			if err := m.Funds[len(m.Funds)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Salt", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Salt = append(m.Salt[:0], dAtA[iNdEx:postIndex]...)
			if m.Salt == nil {
				m.Salt = []byte{}
			}
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FixMsg", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FixMsg = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgInstantiateAndRegisterProxyContractResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInstantiateAndRegisterProxyContractResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInstantiateAndRegisterProxyContractResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContractAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ContractAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
