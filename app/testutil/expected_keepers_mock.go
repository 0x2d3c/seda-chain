// Code generated by MockGen. DO NOT EDIT.
// Source: app/ante.go
//
// Generated by this command:
//
//	mockgen -source=app/ante.go -package testutil -destination=app/testutil/expected_keepers_mock.go
//

// Package testutil is a generated GoMock package.
package testutil

import (
	context "context"
	reflect "reflect"

	types "github.com/cosmos/cosmos-sdk/types"
	gomock "go.uber.org/mock/gomock"
)

// MockWasmStorageKeeper is a mock of WasmStorageKeeper interface.
type MockWasmStorageKeeper struct {
	ctrl     *gomock.Controller
	recorder *MockWasmStorageKeeperMockRecorder
	isgomock struct{}
}

// MockWasmStorageKeeperMockRecorder is the mock recorder for MockWasmStorageKeeper.
type MockWasmStorageKeeperMockRecorder struct {
	mock *MockWasmStorageKeeper
}

// NewMockWasmStorageKeeper creates a new mock instance.
func NewMockWasmStorageKeeper(ctrl *gomock.Controller) *MockWasmStorageKeeper {
	mock := &MockWasmStorageKeeper{ctrl: ctrl}
	mock.recorder = &MockWasmStorageKeeperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWasmStorageKeeper) EXPECT() *MockWasmStorageKeeperMockRecorder {
	return m.recorder
}

// GetCoreContractAddr mocks base method.
func (m *MockWasmStorageKeeper) GetCoreContractAddr(ctx context.Context) (types.AccAddress, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCoreContractAddr", ctx)
	ret0, _ := ret[0].(types.AccAddress)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCoreContractAddr indicates an expected call of GetCoreContractAddr.
func (mr *MockWasmStorageKeeperMockRecorder) GetCoreContractAddr(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCoreContractAddr", reflect.TypeOf((*MockWasmStorageKeeper)(nil).GetCoreContractAddr), ctx)
}
